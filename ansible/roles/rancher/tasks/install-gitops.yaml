---
- name: "[Install Monitoring] - Check if argocd is installed"
  ansible.builtin.shell: >
    argocd help
  changed_when: false
  failed_when: false
  ignore_errors: true
  register: argocd_cli_install
  when: inventory_hostname in groups['rancher_master']

- name: "[Install GitOps] - Install ArgoCD CLI"
  ansible.builtin.shell: >
    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 && \
    sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd && \
    rm argocd-linux-amd64
  become: true
  when: inventory_hostname in groups['rancher_master'] and argocd_cli_install.rc != 0

- name: "[Install GitOps] - Create namespace for ArgoCD"
  ansible.builtin.shell: >
     kubectl create namespace argocd
  changed_when: false
  failed_when: false
  ignore_errors: true

- name: "[Install GitOps] - Install ArgoCD"
  ansible.builtin.shell: >
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  changed_when: "'created' in argocd_install.stdout or 'configured' in argocd_install.stdout"
  when: inventory_hostname in groups['rancher_master']
  register: argocd_install

- name: "[Install GitOps] - Wait for ArgoCD pods to be ready"
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: argocd
    label_selectors:
      - app.kubernetes.io/name=argocd-server
  register: argocd_pods
  when: inventory_hostname in groups['rancher_master'] and argocd_install is changed
  until: argocd_pods.resources | length > 0 and argocd_pods.resources[0].status.phase == 'Running'
  retries: 10
  delay: 10

- name: "[Install GitOps] - Check if Ingress role is installed"
  ansible.builtin.shell: >
    kubectl get ingress -n argocd argocd-server-ingress
  changed_when: false
  failed_when: false
  ignore_errors: true
  register: argocd_ingress_check

- name: "[Install GitOps] - Copy ArgoCD Ingress template"
  ansible.builtin.template:
    src: argocd_ingress.yaml.j2
    dest: /tmp/argocd_ingress.yaml
    mode: '0644'
  when: inventory_hostname in groups['rancher_master'] and argocd_ingress_check.rc != 0

- name: "[Install GitOps] - Create Ingress for ArgoCD"
  ansible.builtin.shell: >
    kubectl apply -f /tmp/argocd_ingress.yaml
  register: argocd_ingress
  when: inventory_hostname in groups['rancher_master'] and argocd_ingress_check.rc != 0

- name: "[Install GitOps] - Set ArgoCD URL"
  ansible.builtin.set_fact:
    argocd_url: "{{ (gitops.url | default('')) | default('argocd.' + rancher_url, true) }}"
  when: inventory_hostname in groups['rancher_master'] and argocd_install is changed

- name: "[Install GitOps] - Get ArgoCD admin password"
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: argocd
    name: argocd-initial-admin-secret
  register: argocd_secret
  when: inventory_hostname in groups['rancher_master'] and argocd_install is changed

- name: "[Install GitOps] - Decode ArgoCD admin password"
  ansible.builtin.set_fact:
    argocd_admin_password: "{{ argocd_secret.resources[0].data['password'] | b64decode }}"

- name: "[Install GitOps] - Print ArgoCD access information"
  ansible.builtin.debug:
    msg: "ArgoCD is installed at https://{{ argocd_url }} with admin password: {{ argocd_admin_password }}"
  when: inventory_hostname in groups['rancher_master'] and argocd_install is changed