---
- name: "[Install UI] - Check if HELM is installed"
  ansible.builtin.shell: >
    helm version 
  changed_when: false
  failed_when: false
  ignore_errors: true
  register: helm_version_check

- name: "[Install UI] - install HELM"
  ansible.builtin.shell: >
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  become: true
  when: helm_version_check.rc != 0
  
- name: "[Install UI] - Add/Update Rancher repository to Helm"
  kubernetes.core.helm_repository:
    name: rancher-latest
    repo_url: https://releases.rancher.com/server-charts/latest
    state: present
    force_update: true
  register: rancher_repo_add

- name: "[Install UI] - Add/Update Jetstack repository to Helm"
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
    state: present
    force_update: true
  register: jetstack_repo_add

- name: "[Install UI] - Install CRD cert-manager"
  ansible.builtin.command: >
    kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.18.0/cert-manager.crds.yaml
  register: cert_manager_install
  changed_when: "'unchanged' not in cert_manager_install.stdout"

- name: "[Install UI] - Install cert-manager"
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    namespace: cert-manager
    create_namespace: true
    wait: true
  register: cert_manager_helm_install

- name: "[Install UI] - Install Rancher UI"
  kubernetes.core.helm:
    name: rancher
    chart_ref: rancher-latest/rancher
    release_namespace: cattle-system
    create_namespace: true
    wait: true
    values:
      hostname: "{{ rancher_url }}"
      replicas: 1
      bootstrapPassword: "{{ admin_password }}"
  register: rancher_ui_install

- name: "[Install UI] - Wait for Rancher UI to be ready"
  ansible.builtin.command: >
    kubectl wait --for=condition=Available=true deployment/rancher -n cattle-system --timeout=300s
  register: rancher_ui_ready
  changed_when: rancher_ui_install is changed
